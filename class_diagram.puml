@startuml

package Domain {
    class User{
        + Id
        + Username
        + Email
        + PasswordHash
        + RegistrationDate
        + Karma
    }
    
    class PostNotification{
        +Id
        +PostId
        +UserId
    }
    
    class Comment{
        + Id
        + PostId
        + AuthorId
        + Content
        + Reaction
        + ParrentCommentId
    }
    
    class Post{
        + Id
        + Title
        + ImageUrl
        + Content
        + CommunityId
        + AuthorId
        + CreationDate
        + LastEditDate
    }
    
    class Community {
        + Name
        + Description
        + CreatorId
        + CreationDate
    }
    
    class Reaction {
        + Id
        + ReactionType
        + AuthorId
    }
    
    class PostReaction {
        + PostId
    }
    
    class CommentReaction {
        + CommentId
    }
    
    enum ReactionType{
        Like
        Dislike
    }
    
    class Subscription {
        + Id
        + UserId
        + CommunityId
        + SubscriptionDate
        + EnableNotifications
    }
    
    class Moderator {
        + Id
        + UserId
        + CommunityId
        + GrantedDate
    }
    
    'Relations'
    Community *-- Post
    Community *-- Subscription
    Community *-- Moderator
    
    User *-- Subscription
    User *-- Moderator
    
    Post *-- Comment
    Post *-- PostReaction
    
    Comment *-- CommentReaction
    Comment --> Comment
    
    Reaction <|-- CommentReaction
    Reaction <|-- PostReaction
    Reaction *-- ReactionType
}

package Repository {
    interface IRepository<T>{
        + GetAllAsync()
        + GetByIdAsync()
        + AddAsync()
        + UpdateAsync()
        + DeleteAsync()
    }
    
    interface IUserRepository{
        + GetByEmailAsync()
    }
    
    interface IPostReactionRepository {
        + GetLikedPostsAsync()
    }
    
    class Repository<T>{
        - context
        - entities
        + Repository()
        + GetAllAsync()
        + GetByIdAsync()
        + AddAsync()
        + UpdateAsync()
        + DeleteAsync()
    }
    
    class UserRepository{
        + UserRepository()
        + GetByEmailAsync()
    }
    
    class PostReactionRepository {
        + PostReactionRepository()
        + GetLikedPostsAsync()
    }
    
    IRepository <|-- IPostReactionRepository
    IRepository <|-- IUserRepository
    IRepository <|-- Repository
    
    Repository <|-- UserRepository
    Repository <|-- PostReactionRepository
    
    IUserRepository <|-- UserRepository
    User <--IUserRepository : "depends on"
    
    IPostReactionRepository <|-- PostReactionRepository
    PostReaction <-- IPostReactionRepository : "depends on"
}

package Controllers{
    class UserController{
        - repository
        + Register()
        + Login()
        + GetUser()
        + UpdateUser()
        + DeleteUser()
        - VerifyPasswordHash()
    }
    
     class CommentController{
        - commentRepository
        - commentReactionRepository
        + GetCommentById()
        + CreateComment()
        + UpdateComment()
        + DeleteComment()
        + ReactToComment()
        + DeleteReactionToComment()
    }
    
    class PostController {
        - communityRepository
        - postRepository
        - postReactionRepository
        + GetPostById()
        + CreatePost()
        + UpdatePost()
        + DeletePost()
        + ReactToPost()
        + DeleteReactionToPost()
    }
    
    class CommunityController {
        - communityRepository
        - moderatorRepository
        - userRepository
        + GetCommuntityById()
        + CreateCommunity()
        + UpdateCommunity()
        + DeleteCommunity()
        + Subscribe()
        + Unsubscribe()
        + AddModerator()
        + RemoveModerator()
        + GetModerators()
        + GetCreator()
    }
    
    IPostReactionRepository o-- PostController
    
    IUserRepository o-- UserController
    IUserRepository o-- CommunityController
    
    IRepository o-- CommentController
    IRepository o-- PostController
    IRepository o-- CommunityController
}

package Services{
    class NotificationService{
        - notificationRepository
        + SendPendingNotifications()
    }
    
    class PostModerationService{
        - postRepository
        + CheckPost()
    }
    
    IRepository o-- NotificationService
    IRepository o-- PostModerationService
}

@enduml
